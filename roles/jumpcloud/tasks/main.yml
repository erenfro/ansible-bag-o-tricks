---

- name: Check if JumpCloud is already installed
  shell: "[ -d /opt/jc ] && echo 'Found' || echo ''"
  register: jc_installed

#- name: Update time
#  shell: "ntpdate -u pool.ntp.org"
#  when: "not jc_installed.stdout"

- name: Install JumpCloud
  shell: "curl --header 'x-connect-key: {{ jumpcloud_x_connect_key }}' https://kickstart.jumpcloud.com/Kickstart | sudo bash"
  when: "not jc_installed.stdout"

- name: Get and register the jumpcloud system key from config. 
  shell: "cat /opt/jc/jcagent.conf | python -c 'import sys, json; print json.load(sys.stdin)[sys.argv[1]]' systemKey"
  register: system_key

- name: Use jumpcloud api and curl to tag this system.
  #shell: 'curl -iq -d \'{ "tags" : ["mobops", "mobdevops", "{{ jumpcloud_system_tag }}"] }\' -X "PUT" -H "Content-Type: application/json" -H "Accept: application/json" -H "x-api-key: {{ jumpcloud_api_key }}" --url "https://console.jumpcloud.com/api/systems/{{ system_key }}"'
  shell: >
    curl -iq -d '{ "tags" : {{ jumpcloud_system_tags | to_json }} }' -X "PUT" -H "Content-Type: application/json" -H "Accept: application/json" -H "x-api-key: {{ jumpcloud_api_key }}" --url https://console.jumpcloud.com/api/systems/{{ system_key.stdout }}

#curl -iq -d '{ "tags" : ["mobops", "mobdevops", "{{ jumpcloud_system_tag }}"] }' -X "PUT" -H "Content-Type: application/json" -H "Accept: application/json" -H "x-api-key: {{ jumpcloud_api_key }}" --url https://console.jumpcloud.com/api/systems/{{ system_key.stdout }}
